# -*- coding: utf-8 -*-
"""Simulasi Bola Keranjang

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18m1N4BCcj-blpwY5YB6czxj16b-X8wQU
"""

import numpy as np
import matplotlib.pyplot as plt
from matplotlib import animation, rc
from IPython.display import HTML
import math as math

a = -9.8
v0 = 15
theta = math.radians(30)
t = 0
dt = 0.1
xray = []
yray = []
vxray = []
vyray = []

vx = v0 * math.cos(theta)
vy = v0 * math.sin(theta) 

score = "false"

x = 0
y = 2
xring = [15,20]
yring = [3,3]

xring2 = [20,20]
yring2 = [3,4]

yground = [0,0]
xground = [0,25]

xperson = [0,0]
yperson = [0,2]

xpole = [20,20]
ypole = [0,3]

index_animate = 0

xray.append(x)
yray.append(y)
print('nilai y(t)')
i = 0
while int(y) >= 0 :
    
   
    vy = vy + (a * dt)
    vyray.append(vy)
  
    y = y + (vy * dt)
    yray.append(y)
  
    x = x + (vx * dt)
    xray.append(x)
    
    if((x>xring[0]) and (x<xring[1]) and (y>yring2[0]) and (y<yring2[1])):
      score = "true"
  
    t += dt
    print(yray[i])
    i += 1

    
plt.plot(xray,yray,xring,yring,'bs',xground,yground,xperson,yperson,xring2,yring2,xpole,ypole) 
plt.xlabel('x velocity')
plt.ylabel('y velocity')
    
# print(yray)    
print(score)
plt.show()

x = np.linspace(-4, 20, 100)
y = np.sin(x)

fig, ax = plt.subplots()
plt.close()
ax.set_xlim(( -4, 20))
ax.set_ylim((-2, 5))
line1, = ax.plot([], [], lw=2)
line2, = ax.plot([], [], lw=2)

xanimate = []
yanimate = []

def init():
    line1.set_data(xring, yring)      
    return (line1,)
  
def animate(i):

  xanimate.append(xray[i])
  yanimate.append(yray[i])
#   print(xanimate)  
  line2.set_data(xanimate, yanimate)
  return (line2,)
anim = animation.FuncAnimation(fig, animate, init_func=init, frames=v0+3, interval=100, blit=True)
rc('animation', html='jshtml')
anim